import TelegramBot from 'node-telegram-bot-api';

if (!process.env.TELEGRAM_SUPPORT_BOT_TOKEN) {
  throw new Error('TELEGRAM_SUPPORT_BOT_TOKEN environment variable must be set');
}

/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏
 */
export class SupportBotManager {
  private bot: TelegramBot;
  private supportChatId: string = '8184506267'; // Chat ID –¥–ª—è @summa_help_bot
  
  constructor() {
    this.bot = new TelegramBot(process.env.TELEGRAM_SUPPORT_BOT_TOKEN!, {
      polling: false // –ù–µ –Ω—É–∂–µ–Ω polling –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    });
  }
  
  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —É—Å–ª—É–≥—É –≤ –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏
   */
  async sendServiceLead(data: {
    serviceName: string;
    clientName: string;
    clientPhone: string;
    clientEmail?: string;
  }): Promise<boolean> {
    try {
      const message = this.formatLeadMessage(data);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏
      await this.bot.sendMessage(this.supportChatId, message, {
        parse_mode: 'HTML'
      });
      
      console.log(`Service lead sent to support bot for service: ${data.serviceName}`);
      return true;
    } catch (error) {
      console.error('Error sending service lead to support bot:', error);
      return false;
    }
  }
  
  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞—è–≤–∫–æ–π
   */
  private formatLeadMessage(data: {
    serviceName: string;
    clientName: string;
    clientPhone: string;
    clientEmail?: string;
  }): string {
    const currentTime = new Date().toLocaleString('ru-RU', {
      timeZone: 'Europe/Moscow'
    });
    
    let message = `üîî <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —É—Å–ª—É–≥—É</b>\n\n`;
    message += `üìã <b>–£—Å–ª—É–≥–∞:</b> ${data.serviceName}\n`;
    message += `üë§ <b>–ò–º—è:</b> ${data.clientName}\n`;
    message += `üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${data.clientPhone}\n`;
    
    if (data.clientEmail) {
      message += `üìß <b>Email:</b> ${data.clientEmail}\n`;
    }
    
    message += `\n‚è∞ <b>–í—Ä–µ–º—è:</b> ${currentTime} (–ú–°–ö)`;
    
    return message;
  }
}

export const supportBotManager = new SupportBotManager();